services:
  # Convex Backend Service
  convex-backend:
    image: ghcr.io/get-convex/convex-backend:c1a7ac393888d743e704de56cf569a154b4526d4
    restart: unless-stopped
    stop_grace_period: 10s
    stop_signal: SIGINT
    ports:
      - "${CONVEX_PORT:-3210}:3210"
      - "${CONVEX_SITE_PROXY_PORT:-3211}:3211"
    volumes:
      - convex_data:/convex/data
    environment:
      - INSTANCE_NAME=${INSTANCE_NAME:-zengrid}
      - INSTANCE_SECRET=${INSTANCE_SECRET:-}
      - CONVEX_CLOUD_ORIGIN=${CONVEX_CLOUD_ORIGIN:-http://127.0.0.1:${CONVEX_PORT:-3210}}
      - CONVEX_SITE_ORIGIN=${CONVEX_SITE_ORIGIN:-http://127.0.0.1:${CONVEX_SITE_PROXY_PORT:-3211}}
      - DISABLE_BEACON=${DISABLE_BEACON:-true}
      - REDACT_LOGS_TO_CLIENT=${REDACT_LOGS_TO_CLIENT:-}
      - DO_NOT_REQUIRE_SSL=${DO_NOT_REQUIRE_SSL:-}
      - POSTGRES_URL=${POSTGRES_URL:-}
      - MYSQL_URL=${MYSQL_URL:-}
      - RUST_LOG=${RUST_LOG:-info}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3210/version"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - grid-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  # Convex Dashboard Service
  convex-dashboard:
    image: ghcr.io/get-convex/convex-dashboard:c1a7ac393888d743e704de56cf569a154b4526d4
    restart: unless-stopped
    stop_grace_period: 10s
    stop_signal: SIGINT
    ports:
      - "${CONVEX_DASHBOARD_PORT:-6791}:6791"
    environment:
      - NEXT_PUBLIC_DEPLOYMENT_URL=${NEXT_PUBLIC_DEPLOYMENT_URL:-http://127.0.0.1:${CONVEX_PORT:-3210}}
    depends_on:
      convex-backend:
        condition: service_healthy
    networks:
      - grid-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # ZenGrid Nuxt App
  zengrid:
    build:
      context: .
      dockerfile: Dockerfile
      target: runner
    restart: unless-stopped
    ports:
      - "${NUXT_PORT:-3000}:3000"
    volumes:
      - admin_keys:/shared:ro
    environment:
      - CONVEX_SELF_HOSTED_URL=http://convex-backend:3210
      - CONVEX_SELF_HOSTED_ADMIN_KEY_FILE=/shared/admin_key
      - NUXT_HOST=0.0.0.0
      - NUXT_PORT=3000
      - NODE_ENV=production
    depends_on:
      convex-backend:
        condition: service_healthy
      admin-key-generator:
        condition: service_completed_successfully
    networks:
      - grid-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  # Admin Key Generator (runs once to generate the admin key)
  admin-key-generator:
    image: curlimages/curl:latest
    volumes:
      - admin_keys:/shared
    command: >
      sh -c "
      if [ ! -f /shared/admin_key ]; then
        echo 'Generating new admin key...'
        # Generate a secure random key
        ADMIN_KEY=$$(head -c 32 /dev/urandom | base64 | tr -d '=+/' | cut -c1-43)
        echo $$ADMIN_KEY > /shared/admin_key
        echo 'Admin key generated and saved to /shared/admin_key'
        echo 'Admin key: '$$ADMIN_KEY
      else
        echo 'Admin key already exists, using existing key:'
        cat /shared/admin_key
      fi
      "
    restart: "no"
    networks:
      - grid-network

volumes:
  convex_data:
    driver: local
  admin_keys:
    driver: local

networks:
  grid-network:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: grid-br0
